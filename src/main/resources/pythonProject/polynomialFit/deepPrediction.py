# # 输入数据量是输出数据量的十二倍

import numpy as np
from scipy.optimize import curve_fit
import sys
import json

# # data_x = np.array(
# #     [["2023-07-15 03:08:58",458.0],["2023-07-15 03:21:07",458.0],["2023-07-15 03:39:23",458.0],["2023-07-15 03:44:19",458.0],["2023-07-15 03:55:21",458.0],["2023-07-15 04:06:54",458.0],["2023-07-15 04:17:38",458.0],["2023-07-15 04:29:50",458.0],["2023-07-15 04:41:19",458.0],["2023-07-15 04:52:30",458.0],["2023-07-15 05:03:07",458.0],["2023-07-15 05:15:05",458.0],["2023-07-15 05:26:08",458.0],["2023-07-15 05:36:42",458.0],["2023-07-15 05:53:06",458.0],["2023-07-15 06:01:00",458.0],["2023-07-15 06:13:08",458.0],["2023-07-15 06:23:30",458.0],["2023-07-15 06:34:02",458.0],["2023-07-15 06:44:57",458.0],["2023-07-15 06:56:52",458.0],["2023-07-15 07:08:11",458.0],["2023-07-15 07:19:26",458.0],["2023-07-15 07:31:31",458.0],["2023-07-15 07:42:36",458.0],["2023-07-15 07:53:49",458.0],["2023-07-15 08:04:39",458.0],["2023-07-15 08:16:27",458.0],["2023-07-15 08:28:06",458.0],["2023-07-15 08:38:44",457.0],["2023-07-15 08:50:34",457.0],["2023-07-15 09:02:38",457.0],["2023-07-15 09:12:59",457.0],["2023-07-15 09:23:59",457.0],["2023-07-15 09:36:29",457.0],["2023-07-15 09:47:25",457.0],["2023-07-15 09:58:50",457.0],["2023-07-15 10:10:00",457.0],["2023-07-15 10:21:09",456.0],["2023-07-15 10:32:57",456.0],["2023-07-15 10:43:52",456.0],["2023-07-15 10:55:13",456.0],["2023-07-15 11:06:35",456.0],["2023-07-15 11:17:50",455.0],["2023-07-15 11:30:28",455.0],["2023-07-15 11:41:09",455.0],["2023-07-15 11:53:01",455.0],["2023-07-15 12:04:17",455.0],["2023-07-15 12:15:52",455.0],["2023-07-15 12:26:28",455.0],["2023-07-15 12:38:14",455.0],["2023-07-15 12:48:48",455.0],["2023-07-15 13:00:38",455.0],["2023-07-15 13:11:36",454.0],["2023-07-15 13:22:39",454.0],["2023-07-15 13:33:57",454.0],["2023-07-15 13:46:10",454.0],["2023-07-15 13:56:52",454.0],["2023-07-15 14:08:25",453.0],["2023-07-15 14:19:40",453.0],["2023-07-15 14:30:51",454.0],["2023-07-15 14:43:07",453.0],["2023-07-15 14:53:49",453.0],["2023-07-15 15:05:56",453.0],["2023-07-15 15:16:48",453.0],["2023-07-15 15:28:16",453.0],["2023-07-15 15:38:55",453.0],["2023-07-15 15:50:26",453.0],["2023-07-15 16:01:53",453.0],["2023-07-15 16:13:21",453.0],["2023-07-15 16:24:22",454.0],["2023-07-15 16:36:07",454.0],["2023-07-15 16:46:39",454.0],["2023-07-15 16:59:37",454.0],["2023-07-15 17:10:37",454.0],["2023-07-15 17:22:21",454.0],["2023-07-15 17:32:13",454.0],["2023-07-15 17:44:36",454.0],["2023-07-15 17:55:11",454.0],["2023-07-15 18:07:29",454.0],["2023-07-15 18:18:45",455.0],["2023-07-15 18:30:25",455.0],["2023-07-15 18:41:01",455.0],["2023-07-15 18:52:10",455.0],["2023-07-15 19:04:13",456.0],["2023-07-15 19:15:12",456.0],["2023-07-15 19:26:06",456.0],["2023-07-15 19:37:29",456.0],["2023-07-15 19:48:58",456.0],["2023-07-15 20:01:20",456.0],["2023-07-15 20:12:18",456.0],["2023-07-15 20:30:22",456.0],["2023-07-15 20:34:54",456.0],["2023-07-15 20:46:06",456.0],["2023-07-15 20:57:11",456.0],["2023-07-15 21:11:17",457.0],["2023-07-15 21:21:15",457.0],["2023-07-15 21:32:10",457.0],["2023-07-15 21:43:13",457.0],["2023-07-15 21:55:09",457.0],["2023-07-15 22:05:31",457.0],["2023-07-15 22:16:05",457.0],["2023-07-15 22:28:58",457.0],["2023-07-15 22:40:49",457.0],["2023-07-15 22:51:02",457.0],["2023-07-15 23:02:19",456.0],["2023-07-15 23:13:53",456.0],["2023-07-15 23:24:58",456.0],["2023-07-15 23:35:56",456.0],["2023-07-15 23:48:12",457.0],["2023-07-15 23:59:20",457.0],["2023-07-16 00:10:26",457.0],["2023-07-16 00:22:46",457.0],["2023-07-16 00:33:26",457.0],["2023-07-16 00:45:05",457.0],["2023-07-16 00:55:55",457.0],["2023-07-16 01:07:22",457.0],["2023-07-16 01:18:07",456.0],["2023-07-16 01:30:14",456.0],["2023-07-16 01:41:49",456.0],["2023-07-16 01:53:02",456.0],["2023-07-16 02:04:11",456.0],["2023-07-16 02:15:00",457.0],["2023-07-16 02:26:38",457.0],["2023-07-16 02:38:17",457.0],["2023-07-16 02:49:17",456.0],["2023-07-16 03:03:37",456.0],["2023-07-16 03:13:20",456.0],["2023-07-16 03:24:39",456.0],["2023-07-16 03:35:02",456.0],["2023-07-16 03:45:59",456.0],["2023-07-16 03:57:54",456.0],["2023-07-16 04:08:38",456.0],["2023-07-16 04:20:48",456.0],["2023-07-16 04:32:19",456.0],["2023-07-16 04:43:20",456.0],["2023-07-16 04:54:30",456.0],["2023-07-16 05:05:44",456.0],["2023-07-16 05:17:09",456.0],["2023-07-16 05:29:17",456.0],["2023-07-16 05:40:06",456.0],["2023-07-16 05:50:38",456.0],["2023-07-16 06:02:26",456.0],["2023-07-16 06:13:58",456.0],["2023-07-16 06:25:37",456.0],["2023-07-16 06:36:35",456.0],["2023-07-16 06:47:36",456.0],["2023-07-16 06:59:20",456.0],["2023-07-16 07:10:17",456.0],["2023-07-16 07:21:26",456.0],["2023-07-16 07:34:14",456.0],["2023-07-16 07:45:20",456.0],["2023-07-16 07:56:27",455.0],["2023-07-16 08:07:11",455.0],["2023-07-16 08:17:44",455.0],["2023-07-16 08:29:18",455.0],["2023-07-16 08:41:19",455.0],["2023-07-16 08:52:32",455.0],["2023-07-16 09:03:52",455.0],["2023-07-16 09:14:53",455.0],["2023-07-16 09:25:57",454.0],["2023-07-16 09:38:36",454.0],["2023-07-16 09:49:52",454.0],["2023-07-16 10:01:04",454.0],["2023-07-16 10:11:59",454.0],["2023-07-16 10:23:47",454.0],["2023-07-16 10:33:48",454.0],["2023-07-16 10:45:51",454.0],["2023-07-16 10:57:09",454.0],["2023-07-16 11:08:17",454.0],["2023-07-16 11:20:13",454.0],["2023-07-16 11:31:03",454.0],["2023-07-16 11:42:04",454.0],["2023-07-16 11:55:06",453.0],["2023-07-16 12:05:52",453.0],["2023-07-16 12:17:38",453.0],["2023-07-16 12:27:34",453.0],["2023-07-16 12:39:37",453.0],["2023-07-16 12:50:55",453.0],["2023-07-16 13:02:12",453.0],["2023-07-16 13:13:06",453.0],["2023-07-16 13:24:57",453.0],["2023-07-16 13:35:53",453.0],["2023-07-16 13:48:07",453.0],["2023-07-16 13:58:10",453.0],["2023-07-16 14:10:46",454.0],["2023-07-16 14:21:26",454.0],["2023-07-16 14:33:34",454.0],["2023-07-16 14:43:47",454.0],["2023-07-16 14:55:31",454.0],["2023-07-16 15:06:24",454.0],["2023-07-16 15:19:18",454.0],["2023-07-16 15:30:19",454.0],["2023-07-16 15:41:55",454.0],["2023-07-16 15:52:59",454.0],["2023-07-16 16:03:26",454.0],["2023-07-16 16:15:47",455.0],["2023-07-16 16:26:18",455.0],["2023-07-16 16:37:23",455.0],["2023-07-16 16:49:24",454.0],["2023-07-16 17:00:57",455.0],["2023-07-16 17:11:46",455.0],["2023-07-16 17:23:35",455.0],["2023-07-16 17:34:34",455.0],["2023-07-16 17:45:29",455.0],["2023-07-16 17:57:05",455.0],["2023-07-16 18:07:55",455.0],["2023-07-16 18:21:23",455.0],["2023-07-16 18:31:15",455.0],["2023-07-16 18:43:12",455.0],["2023-07-16 18:54:28",454.0],["2023-07-16 19:05:46",455.0],["2023-07-16 19:17:00",454.0],["2023-07-16 19:28:00",454.0],["2023-07-16 19:39:21",454.0],["2023-07-16 19:51:32",454.0],["2023-07-16 20:02:38",453.0],["2023-07-16 20:13:48",453.0],["2023-07-16 20:24:51",453.0],["2023-07-16 20:36:56",453.0],["2023-07-16 20:47:33",453.0],["2023-07-16 20:59:24",453.0],["2023-07-16 21:10:23",453.0],["2023-07-16 21:21:31",453.0],["2023-07-16 21:33:17",453.0],["2023-07-16 21:55:07",453.0],["2023-07-16 21:57:26",453.0],["2023-07-16 22:06:45",453.0],["2023-07-16 22:19:02",455.0],["2023-07-16 22:29:34",453.0],["2023-07-16 22:40:28",455.0],["2023-07-16 22:52:23",455.0],["2023-07-16 23:04:23",454.0],["2023-07-16 23:15:20",454.0],["2023-07-16 23:27:05",454.0],["2023-07-16 23:38:02",454.0],["2023-07-16 23:49:56",454.0],["2023-07-17 00:06:32",454.0],["2023-07-17 00:12:48",453.0],["2023-07-17 00:24:11",453.0],["2023-07-17 00:34:17",453.0],["2023-07-17 00:46:07",452.0],["2023-07-17 00:57:27",451.0],["2023-07-17 01:08:44",451.0],["2023-07-17 01:21:19",451.0],["2023-07-17 01:31:15",457.0],["2023-07-17 01:43:37",457.0],["2023-07-17 01:54:37",452.0],["2023-07-17 02:06:04",451.0],["2023-07-17 02:22:30",452.0],["2023-07-17 02:29:09",452.0],["2023-07-17 02:40:36",452.0],["2023-07-17 02:52:03",451.0],["2023-07-17 03:02:48",451.0],["2023-07-17 03:14:04",451.0],["2023-07-17 03:26:08",451.0],["2023-07-17 03:37:40",451.0],["2023-07-17 03:48:26",451.0],["2023-07-17 04:00:16",455.0],["2023-07-17 04:11:06",455.0],["2023-07-17 04:23:45",455.0],["2023-07-17 04:35:29",459.0],["2023-07-17 04:46:01",459.0],["2023-07-17 04:57:16",459.0],["2023-07-17 05:08:56",459.0],["2023-07-17 05:19:49",459.0],["2023-07-17 05:31:40",459.0],["2023-07-17 05:42:39",459.0],["2023-07-17 05:54:23",459.0],["2023-07-17 06:05:15",459.0],["2023-07-17 06:16:03",459.0],["2023-07-17 06:28:40",459.0],["2023-07-17 06:38:33",459.0],["2023-07-17 06:51:03",459.0],["2023-07-17 07:03:15",459.0],["2023-07-17 07:14:05",459.0],["2023-07-17 07:25:01",459.0],["2023-07-17 07:36:07",459.0],["2023-07-17 07:48:56",459.0],["2023-07-17 07:59:23",459.0],["2023-07-17 08:17:46",458.0],["2023-07-17 08:28:48",458.0],["2023-07-17 08:39:55",458.0],["2023-07-17 08:52:23",458.0],["2023-07-17 09:03:53",458.0],["2023-07-17 09:14:52",458.0],["2023-07-17 09:25:26",458.0],["2023-07-17 09:37:11",458.0],["2023-07-17 09:48:49",458.0],["2023-07-17 09:59:59",458.0],["2023-07-17 10:11:16",458.0],["2023-07-17 10:22:09",458.0],["2023-07-17 10:35:02",458.0],["2023-07-17 10:45:30",458.0],["2023-07-17 10:56:40",458.0],["2023-07-17 11:12:43",458.0],["2023-07-17 11:23:02",458.0],["2023-07-17 11:45:19",457.0],["2023-07-17 11:56:28",458.0],["2023-07-17 12:07:31",458.0],["2023-07-17 12:18:40",458.0],["2023-07-17 12:31:22",458.0],["2023-07-17 12:41:48",458.0],["2023-07-17 12:53:01",458.0],["2023-07-17 13:04:57",457.0],["2023-07-17 13:16:52",457.0],["2023-07-17 13:27:50",457.0],["2023-07-17 13:39:42",457.0],["2023-07-17 13:50:41",457.0],["2023-07-17 14:02:23",457.0],["2023-07-17 14:13:17",457.0],["2023-07-17 14:24:08",457.0],["2023-07-17 14:35:31",457.0],["2023-07-17 14:47:07",457.0],["2023-07-17 14:59:20",457.0],["2023-07-17 15:09:57",457.0],["2023-07-17 15:21:14",457.0],["2023-07-17 15:33:18",457.0],["2023-07-17 15:44:28",457.0],["2023-07-17 15:55:25",457.0],["2023-07-17 16:07:09",457.0],["2023-07-17 16:18:06",457.0],["2023-07-17 16:30:57",457.0],["2023-07-17 16:42:02",457.0],["2023-07-17 16:53:17",456.0],["2023-07-17 17:04:12",456.0],["2023-07-17 17:15:59",456.0],["2023-07-17 17:26:48",457.0],["2023-07-17 17:38:51",457.0],["2023-07-17 17:50:00",457.0],["2023-07-17 18:01:00",457.0],["2023-07-17 18:11:53",457.0],["2023-07-17 18:25:04",457.0],["2023-07-17 18:34:36",457.0],["2023-07-17 18:46:41",457.0],["2023-07-17 18:57:46",457.0],["2023-07-17 19:09:20",457.0],["2023-07-17 19:21:33",457.0],["2023-07-17 19:32:46",457.0],["2023-07-17 19:43:13",458.0],["2023-07-17 19:55:17",458.0],["2023-07-17 20:06:08",457.0],["2023-07-17 20:17:39",457.0],["2023-07-17 20:28:42",457.0],["2023-07-17 20:40:27",457.0],["2023-07-17 20:52:44",457.0],["2023-07-17 21:03:47",457.0],["2023-07-17 21:24:10",457.0],["2023-07-17 21:26:42",458.0],["2023-07-17 21:38:02",458.0],["2023-07-17 21:49:05",458.0],["2023-07-17 22:00:28",458.0],["2023-07-17 22:11:32",458.0],["2023-07-17 22:22:34",457.0],["2023-07-17 22:34:20",457.0],["2023-07-17 22:45:20",457.0],["2023-07-17 22:56:32",458.0],["2023-07-17 23:09:04",457.0],["2023-07-17 23:19:44",457.0],["2023-07-17 23:35:21",457.0],["2023-07-17 23:42:07",457.0],["2023-07-17 23:53:13",457.0],["2023-07-18 00:05:40",457.0],["2023-07-18 00:15:54",457.0],["2023-07-18 00:27:55",457.0],["2023-07-18 00:39:09",458.0],["2023-07-18 00:50:17",457.0],["2023-07-18 01:02:36",457.0],["2023-07-18 01:13:34",457.0],["2023-07-18 01:24:39",457.0],["2023-07-18 01:35:38",457.0],["2023-07-18 01:48:36",457.0],["2023-07-18 01:59:30",458.0],["2023-07-18 02:10:25",458.0],["2023-07-18 02:21:38",458.0],["2023-07-18 02:32:40",458.0],["2023-07-18 02:43:37",458.0],["2023-07-18 02:55:53",458.0],["2023-07-18 03:07:18",458.0],["2023-07-18 03:18:11",458.0],["2023-07-18 03:29:09",458.0],["2023-07-18 03:41:42",458.0],["2023-07-18 03:59:07",458.0],["2023-07-18 04:03:58",458.0],["2023-07-18 04:14:54",458.0],["2023-07-18 04:26:07",458.0],["2023-07-18 04:38:12",457.0],["2023-07-18 04:49:20",457.0],["2023-07-18 05:01:37",457.0],["2023-07-18 05:12:33",457.0],["2023-07-18 05:23:37",458.0],["2023-07-18 05:34:45",458.0],["2023-07-18 05:45:30",458.0],["2023-07-18 05:57:53",458.0],["2023-07-18 06:11:53",458.0],["2023-07-18 06:19:52",458.0],["2023-07-18 06:30:54",457.0],["2023-07-18 06:42:40",457.0],["2023-07-18 06:53:29",458.0],["2023-07-18 07:05:50",458.0],["2023-07-18 07:17:17",457.0],["2023-07-18 07:28:09",458.0],["2023-07-18 07:39:26",458.0],["2023-07-18 07:51:14",458.0],["2023-07-18 08:01:58",457.0],["2023-07-18 08:13:30",457.0],["2023-07-18 08:25:49",457.0],["2023-07-18 08:37:07",457.0],["2023-07-18 08:48:19",457.0],["2023-07-18 08:59:18",457.0],["2023-07-18 09:10:01",457.0],["2023-07-18 09:23:05",457.0],["2023-07-18 09:33:42",457.0],["2023-07-18 09:44:30",457.0],["2023-07-18 09:55:59",457.0],["2023-07-18 10:07:08",457.0],["2023-07-18 10:30:07",451.0],["2023-07-18 10:41:11",451.0],["2023-07-18 11:02:05",449.0],["2023-07-18 11:13:41",451.0],["2023-07-18 11:24:49",452.0],["2023-07-18 11:35:23",455.0],["2023-07-18 11:47:17",455.0],["2023-07-18 11:58:13",454.0],["2023-07-18 12:10:59",453.0],["2023-07-18 12:21:26",451.0],["2023-07-18 12:32:56",449.0],["2023-07-18 12:45:10",449.0],["2023-07-18 12:55:21",449.0],["2023-07-18 13:07:49",449.0],["2023-07-18 13:18:04",449.0],["2023-07-18 13:31:00",449.0],["2023-07-18 13:41:34",449.0],["2023-07-18 13:52:24",449.0],["2023-07-18 14:04:06",449.0],["2023-07-18 14:26:57",449.0],["2023-07-18 14:37:24",449.0],["2023-07-18 14:49:14",449.0],["2023-07-18 15:00:14",449.0],["2023-07-18 15:10:58",449.0],["2023-07-18 15:23:21",449.0],["2023-07-18 15:34:03",456.0],["2023-07-18 15:45:24",456.0],["2023-07-18 15:57:11",456.0],["2023-07-18 16:09:21",456.0],["2023-07-18 16:20:20",456.0],["2023-07-18 16:30:41",456.0],["2023-07-18 16:43:29",456.0],["2023-07-18 16:55:13",456.0],["2023-07-18 17:05:00",456.0],["2023-07-18 17:17:10",456.0],["2023-07-18 17:29:56",456.0],["2023-07-18 17:39:40",456.0],["2023-07-18 17:51:10",456.0],["2023-07-18 18:02:06",456.0],["2023-07-18 18:14:32",456.0],["2023-07-18 18:25:20",456.0],["2023-07-18 18:36:54",456.0],["2023-07-18 18:48:29",456.0],["2023-07-18 18:59:07",457.0],["2023-07-18 19:10:44",457.0],["2023-07-18 19:22:08",457.0],["2023-07-18 19:33:19",457.0]]
# # )
# # # 数据量必须是整天的
# # data_x = data_x[-(6 * 24) * (len(data_x) // (6 * 24)):]
# # # print(data_x.shape)
# # x = []
# # for (date, value) in data_x:
# #     x.append(float(value))
# # data_array = np.array(x)
# # print(x)
# # # x_ = [0]
# # # for i in np.arange(1, data_array.shape[0]):
# # #     x_.append(data_array[i] - data_array[i - 1])
# # # print(x_)
# # # data_array = np.array(x_)

data_json_str = sys.argv[-1]  # 获取从 Java 传递过来的 JSON 字符串参数
# print(data_json_str)
# 解析 JSON 字符串为 Python 对象
data_array = np.array(json.loads(data_json_str))
ratio = 12
data_array = data_array[-ratio * (len(data_array) // ratio):]
data_lens = len(data_array)
predictionData_lens = data_lens // ratio


# 定义多项式函数
def polynomial_func(x, *coeffs):
    y = 0
    for i in range(len(coeffs)):
        y += coeffs[i] * x**i
    return y

# 假设data是您的一维数组，time_series是对应的时间序列
time_series = data_array[:(ratio - 1) * predictionData_lens]
degree = 5
# 使用curve_fit进行多项式拟合
popt, _ = curve_fit(polynomial_func, time_series, data_array[-(ratio - 1) * predictionData_lens:], p0=np.ones(degree)) # 假设使用 degree 次多项式拟合

# 预测未来2个小时的数据走势
future_time_series = data_array[-(ratio - 1) * predictionData_lens:]
predictions = polynomial_func(future_time_series, *popt)[-predictionData_lens:]
predictions_list = []
for prediction in predictions:
    predictions_list.append(float("{:.4f}".format(prediction)))
# list 才能被封装成 json 传输
print(json.dumps(predictions_list))

